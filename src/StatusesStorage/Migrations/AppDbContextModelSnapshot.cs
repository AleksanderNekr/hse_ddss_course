// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StatusesStorage;

#nullable disable

namespace StatusesStorage.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("StatusesStorage.Entities.Approvers.CustomerApprover", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ProjectId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("VacationRequestId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("VacationRequestId");

                    b.ToTable("CustomerApprovers");
                });

            modelBuilder.Entity("StatusesStorage.Entities.Approvers.ProjectApprover", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ProjectId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("VacationRequestId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("VacationRequestId");

                    b.ToTable("ProjectApprovers");
                });

            modelBuilder.Entity("StatusesStorage.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int>("Role")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("TEXT");

                    b.Property<string>("UsernameNormalized")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("StatusesStorage.Entities.VacationRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProjectId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("StartDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("VacationRequests");
                });

            modelBuilder.Entity("StatusesStorage.Entities.VacationStatusLogEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("ApprovalDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("DateApply")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("RejectionDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("RejectionReason")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<int>("VacationRequestId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("VacationRequestId");

                    b.ToTable("VacationStatusLogEntries");
                });

            modelBuilder.Entity("StatusesStorage.Entities.Approvers.CustomerApprover", b =>
                {
                    b.HasOne("StatusesStorage.Entities.VacationRequest", null)
                        .WithMany("CustomerApprovers")
                        .HasForeignKey("VacationRequestId");
                });

            modelBuilder.Entity("StatusesStorage.Entities.Approvers.ProjectApprover", b =>
                {
                    b.HasOne("StatusesStorage.Entities.VacationRequest", null)
                        .WithMany("ProjectApprovers")
                        .HasForeignKey("VacationRequestId");
                });

            modelBuilder.Entity("StatusesStorage.Entities.VacationStatusLogEntry", b =>
                {
                    b.HasOne("StatusesStorage.Entities.VacationRequest", null)
                        .WithMany("Statuses")
                        .HasForeignKey("VacationRequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StatusesStorage.Entities.VacationRequest", b =>
                {
                    b.Navigation("CustomerApprovers");

                    b.Navigation("ProjectApprovers");

                    b.Navigation("Statuses");
                });
#pragma warning restore 612, 618
        }
    }
}
